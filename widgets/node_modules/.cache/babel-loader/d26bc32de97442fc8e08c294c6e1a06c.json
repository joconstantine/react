{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\react\\\\widgets\\\\src\\\\components\\\\Dropdown.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  const [open, setOpen] = setState(false);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null; // don't render\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select a Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui selection dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: renderedOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["D:/GitHub/react/widgets/src/components/Dropdown.js"],"names":["React","useState","Dropdown","options","selected","onSelectedChange","open","setOpen","setState","renderedOptions","map","option","value","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMC,eAAe,GAAGN,OAAO,CAACO,GAAR,CAAYC,MAAM,IAAI;AAC1C,QAAIA,MAAM,CAACC,KAAP,KAAiBR,QAAQ,CAACQ,KAA9B,EAAqC;AACjC,aAAO,IAAP,CADiC,CACpB;AAChB;;AAED,wBACI;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,OAAO,EAAE,MAAMP,gBAAgB,CAACM,MAAD,CAHnC;AAAA,gBAKKA,MAAM,CAACE;AALZ,OACSF,MAAM,CAACC,KADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAduB,CAAxB;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBR,QAAQ,CAACS;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhCD;;KAAMP,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\r\n    const [open, setOpen] = setState(false);\r\n\r\n    const renderedOptions = options.map(option => {\r\n        if (option.value === selected.value) {\r\n            return null; // don't render\r\n        }\r\n\r\n        return (\r\n            <div\r\n                key={option.value}\r\n                className=\"item\"\r\n                onClick={() => onSelectedChange(option)}\r\n            >\r\n                {option.label}\r\n            </div>\r\n        );\r\n    })\r\n    return (\r\n        <div className=\"ui form\">\r\n            <div className=\"field\">\r\n                <label className=\"label\">Select a Color</label>\r\n                <div className=\"ui selection dropdown\">\r\n                    <i className=\"dropdown icon\"></i>\r\n                    <div className=\"text\">{selected.label}</div>\r\n                    <div className=\"menu\">\r\n                        {renderedOptions}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}